id: transition
title: TransitionManager
query: Android TransitionManager
comment: 尽量详尽的演示不同属性和场景用法
description: "TransitionManager 是 Android 中用于处理视图转换动画的工具，能够在不同场景之间平滑过渡。常用于提升用户体验，特别是在动态变化的界面中。"
usage:
  - title: 使用 TransitionManager 进行场景切换
    content: 通过 TransitionManager.go() 方法在不同的场景之间进行切换。
    example: |
      ```xml
      <!-- main_activity.xml -->
      <androidx.constraintlayout.widget.ConstraintLayout
          xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:app="http://schemas.android.com/apk/res-auto"
          android:layout_width="match_parent"
          android:layout_height="match_parent">

          <FrameLayout
              android:id="@+id/container"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              app:layout_constraintTop_toTopOf="parent"
              app:layout_constraintBottom_toBottomOf="parent"
              app:layout_constraintLeft_toLeftOf="parent"
              app:layout_constraintRight_toRightOf="parent" />

      </androidx.constraintlayout.widget.ConstraintLayout>
      ```

      ```xml
      <!-- scene1.xml -->
      <LinearLayout
          xmlns:android="http://schemas.android.com/apk/res/android"
          android:layout_width="match_parent"
          android:layout_height="match_parent"
          android:orientation="vertical">

          <TextView
              android:id="@+id/textView1"
              android:layout_width="wrap_content"
              android:layout_height="wrap_content"
              android:text="Scene 1" />

      </LinearLayout>
      ```

      ```xml
      <!-- scene2.xml -->
      <LinearLayout
          xmlns:android="http://schemas.android.com/apk/res/android"
          android:layout_width="match_parent"
          android:layout_height="match_parent"
          android:orientation="vertical">

          <TextView
              android:id="@+id/textView2"
              android:layout_width="wrap_content"
              android:layout_height="wrap_content"
              android:text="Scene 2" />

      </LinearLayout>
      ```

       ```kotlin
      // 定义两个场景
      val scene1 = Scene.getSceneForLayout(container, R.layout.scene1, context)
      val scene2 = Scene.getSceneForLayout(container, R.layout.scene2, context)

      // 切换场景
      TransitionManager.go(scene1) // 切换到 scene1
      TransitionManager.go(scene2) // 切换到 scene2
      ```

  - title: 使用 Fade 动画
    content: Fade 转场可用于渐隐和渐现效果，提升视觉流畅度。
    example: |
      ```kotlin
      // 创建 Fade 动画
      val fadeTransition = Fade().apply {
          duration = 500 // 动画持续时间
      }

      // 应用 Fade 动画
      TransitionManager.go(scene1, fadeTransition) // 在 scene1 之间应用 Fade 动画
      ```

  - title: 使用 AutoTransition
    content: AutoTransition 自动管理多个视图的转换效果，适合复杂场景。
    example: |
      ```kotlin
      // 使用 AutoTransition
      TransitionManager.go(scene1, AutoTransition()) // 自动处理所有视图的变化
      ```

  - title: 使用 Slide 动画
    content: Slide 动画为视图添加滑动效果，可以增强视觉表现。
    example: |
      ```kotlin
      // 应用 Slide 动画
      val slideTransition = Slide()
      TransitionManager.go(scene1, slideTransition) // 切换到 scene1 时滑入
      ```

  - title: 使用 Explode 动画
    content: Explode 动画使视图像爆炸一样展开，适用于强烈的视觉效果。
    example: |
      ```kotlin
      // 使用 Explode 动画
      val explodeTransition = Explode()
      TransitionManager.go(scene1, explodeTransition) // 使用 Explode 动画切换到 scene1
      ```

  - title: 处理 ViewGroup 中的变化
    content: 对 ViewGroup 中特定子视图进行动画处理。
    example: |
      ```kotlin
      val transition = Fade().apply { duration = 300 }
      TransitionManager.beginDelayedTransition(container, transition) // 开始过渡

      // 修改子视图以触发动画
      myView.visibility = View.GONE // 使视图消失以触发动画
      myView.visibility = View.VISIBLE // 使视图重新出现
      ```

references:
  - title: "Android Developers - Motion and Animation"
    url: https://developer.android.com/guide/topics/graphics/motion
  - title: "TransitionManager Documentation"
    url: https://developer.android.com/reference/android/transition/TransitionManager
  - title: "Exploring Transitions in Android"
    url: https://medium.com/androiddevelopers/exploring-transitions-in-android-75c02e68bfe0
