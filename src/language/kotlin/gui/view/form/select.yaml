id: select
title: Spinner
query: Android Spinner
comment: 尽量详尽的演示不同属性和场景用法
description: "Android 中的 Spinner 是一个视图组件，允许用户从下拉列表中选择一个值。Spinner 的行为类似于其他编程语言中的下拉列表，通常用于提供快速的选择方式。通过 Adapter 可以将数据绑定到 Spinner 中。"
usage:
  - title: 创建 Spinner
    content: 使用 `<Spinner>` 元素在 XML 布局中定义 Spinner。
  - title: 绑定数据
    content: 使用 `ArrayAdapter` 将数组或列表的数据绑定到 Spinner。
  - title: 设置 Spinner 属性
    content: 可设置的属性包括文本样式、大小、背景等。
  - title: 处理选中事件
    content: 通过 `setOnItemSelectedListener` 方法监听用户选择的变化。
  - title: 自定义 Spinner 外观
    content: 可以自定义下拉菜单的布局和样式。
example:
  - title: "创建和绑定数据"
    content: |
      ```xml
      <!-- activity_main.xml -->
      <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
          android:layout_width="match_parent"
          android:layout_height="match_parent">
          <TextView
              android:id="@+id/txtVw"
              android:layout_width="wrap_content"
              android:layout_height="wrap_content"
              android:text="选择用户:" />
          <Spinner
              android:id="@+id/spinner1"
              android:layout_width="wrap_content"
              android:layout_height="wrap_content"
              android:layout_below="@id/txtVw" />
      </RelativeLayout>
      ```
      ```kotlin
      // MainActivity.kt
      val users = arrayOf("用户1", "用户2", "用户3")
      val spinner: Spinner = findViewById(R.id.spinner1)
      val adapter = ArrayAdapter(this, android.R.layout.simple_spinner_item, users)
      adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
      spinner.adapter = adapter
      ```
  - title: "设置 Spinner 属性"
    content: |
      ```xml
      <Spinner
          android:id="@+id/spinner_ID"
          android:layout_width="wrap_content"
          android:layout_height="wrap_content"
          android:textAllCaps="true"
          android:textSize="20sp"
          android:textStyle="bold" />
      ```
  - title: "监听选中事件"
    content: |
      ```kotlin
      spinner.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
          override fun onItemSelected(parent: AdapterView<*>, view: View, position: Int, id: Long) {
              val selectedItem = parent.getItemAtPosition(position).toString()
              Toast.makeText(this@MainActivity, "选中: $selectedItem", Toast.LENGTH_SHORT).show()
          }

          override fun onNothingSelected(parent: AdapterView<*>) {}
      }
      ```
  - title: "自定义 Spinner 外观"
    content: |
      ```xml
      <Spinner
          android:id="@+id/custom_spinner"
          android:layout_width="wrap_content"
          android:layout_height="wrap_content"
          android:popupBackground="@android:color/holo_blue_light"
          android:gravity="center"/>
      ```
references:
  - title: "Android Spinner Documentation"
    url: https://developer.android.com/reference/android/widget/Spinner
  - title: "Creating a Spinner in Android"
    url: https://www.tutlane.com/tutorial/android/android-spinner-dropdown-list-with-examples
  - title: "Using ArrayAdapter with Spinner"
    url: https://www.tutorialwing.com/android-spinner-using-kotlin-with-example/
  - title: "Customizing Spinner Appearance"
    url: https://developer.android.com/guide/topics/ui/controls/spinner
  - title: "Working with Spinners"
    url: https://developer.android.com/training/animation/spring-animation
  - title: "Spinner and Adapter Overview"
    url: https://www.geeksforgeeks.org/spinner-in-android/
