id: "null"
title: 空值
description: 在 Kotlin 中，`null` 是一种特殊类型，主要通过空安全机制（Null Safety）来处理。这种机制确保了变量和属性只有在显式声明为可为空（Nullable）时，才允许赋值为 `null`。默认情况下，所有变量和属性都是不可为空的，除非使用 `?` 将类型标记为可空。Kotlin 提供了多种方式来安全地处理可空类型，如安全调用操作符 `?.`、Elvis 操作符 `?:`、非空断言操作符 `!!` 等，来减少空指针异常的风险。
example: |
  // 1. 声明可空类型
  var nullableString: String? = "Hello"
  nullableString = null // 允许赋值为 null

  // 2. 安全调用操作符 (?.) 示例
  val length: Int? = nullableString?.length // 如果 nullableString 为 null，length 也为 null

  // 3. Elvis 操作符 (?:) 示例
  val lengthOrZero: Int = nullableString?.length ?: 0 // 如果 nullableString 为 null，返回 0

  // 4. 非空断言操作符 (!!) 示例
  val forcedLength: Int = nullableString!!.length // 如果 nullableString 为 null，将抛出空指针异常
references:
  - title: Null Safety
    url: https://kotlinlang.org/docs/null-safety.html
