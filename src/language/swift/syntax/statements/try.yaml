id: try
title: 错误处理
description: |
  在 Swift 中，错误处理是通过使用 `do-catch` 语句以及 `try`、`throw` 和 `throws` 关键字来实现的。`try` 用于标记可能抛出错误的代码，`catch` 则用于处理这些错误。你可以使用 `try?` 将错误转化为可选值，或者使用 `try!` 断言不会发生错误。通过这些工具，Swift 提供了强大且灵活的错误处理机制，确保代码能够优雅地应对各种异常情况。
example: |
  enum FileError: Error {
      case fileNotFound
      case unreadable
  }

  func readFile(at path: String) throws -> String {
      guard path != "" else {
          throw FileError.fileNotFound
      }
      return "File content"
  }

  do {
      let content = try readFile(at: "/path/to/file")
      print(content)
  } catch FileError.fileNotFound {
      print("文件未找到。")
  } catch {
      print("发生了未知错误：\(error)") // error 是系统自动提供的局部变量，它代表抛出的错误对象
  }

  // 使用 `try?` 将错误转为可选值
  let contentOrNil = try? readFile(at: "/wrong/path")

  // 使用 `try!` 强制解包，假定不会出错
  let sureContent = try! readFile(at: "/path/to/file")
references:
  - title: Error Handling
    url: https://docs.swift.org/swift-book/documentation/the-swift-programming-language/errorhandling
