id: font
title: 字体
query: UIKit Custom Font
comment: 如何管理字体资源，以及如何在代码中使用自定义字体
description: 本教程介绍如何在 Swift UIKit 项目中管理字体资源，以及如何在代码中使用自定义字体。
usage:
  - title: 添加字体文件到项目
    description: 将自定义字体文件（.ttf 或 .otf）拖放到 Xcode 项目导航器中，确保勾选了“添加到目标”并选择了你的应用程序目标。
    example: ''
  - title: 在 Info.plist 中注册字体
    description: |
      1. 打开 `Info.plist` 文件。
      2. 添加一个名为 “Fonts provided by application” 的新键，类型为数组。
      3. 为数组添加一个新项，值为字体的完整文件名，包括扩展名。
    example: ''
  - title: 查找字体名称
    description: |
      字体名称不一定与文件名相同。你可以使用以下代码打印出所有可用的字体名称。
    example: |
      ```swift
      for family in UIFont.familyNames.sorted() {
          let names = UIFont.fontNames(forFamilyName: family)
          print("字体族: \(family) 字体名称: \(names)")
      }
      ```
  - title: 在代码中使用自定义字体
    description: |
      使用 `UIFont(name:size:)` 初始化字体对象，传入字体名称和大小。
    example: |
      ```swift
      // 使用自定义字体设置标签文本
      let label = UILabel()
      label.font = UIFont(name: "CustomFont-Regular", size: 16)
      label.text = "这是一段使用自定义字体的文本"
      ```
  - title: 动态调整字体大小
    description: |
      为了支持动态类型，请使用 `UIFontMetrics` 获取缩放的字体对象。
    example: |
      ```swift
      guard let customFont = UIFont(name: "CustomFont-Regular", size: UIFont.labelFontSize) else {
          fatalError("无法加载字体 'CustomFont-Regular'")
      }
      label.font = UIFontMetrics.default.scaledFont(for: customFont)
      label.adjustsFontForContentSizeCategory = true
      ```
references:
  - title: Adding a Custom Font to Your App
    url: https://developer.apple.com/documentation/uikit/text_display_and_fonts/adding_a_custom_font_to_your_app
  - title: How to add custom fonts to iOS app
    url: https://sarunw.com/posts/how-to-add-custom-fonts-to-ios-app/
  - title: 'Custom Fonts: Getting Started'
    url: https://www.kodeco.com/26454946-custom-fonts-getting-started
