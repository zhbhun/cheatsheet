id: values
title: 值资源
query: Android 值资源
comment: 如何定义和使用值资源，包括：字符串、颜色、尺寸、样式、主题、数组、整数、布尔值和 ID 等
description: |
  在 Android 中，值资源（value resources）是外部定义在 XML 文件中的常量，存储在 `res/values/` 目录下。值资源可以包含字符串、颜色、尺寸、样式、数组、整数、布尔值等数据类型。这些资源可以帮助应用在多种设备配置和语言环境中保持一致性，并提供易于更新和维护的集中管理方式。

usage:
  - title: 定义字符串
    content: 字符串资源用于存储应用中的文本，可以通过资源 ID 来访问。
    example: |
      ```xml
      <resources>
          <string name="app_name">MyApp</string>
      </resources>
      ```

      ```kotlin
      // 在代码中获取字符串资源
      val appName = getString(R.string.app_name)
      ```

  - title: 定义颜色
    content: 颜色资源使用十六进制颜色值定义，可用于布局和代码中。
    example: |
      ```xml
      <resources>
          <color name="primaryColor">#FF6200EE</color>
      </resources>
      ```

      ```xml
      <!-- 在布局文件中使用颜色资源 -->
      <TextView
          android:text="Hello"
          android:textColor="@color/primaryColor"/>
      ```

  - title: 定义尺寸
    content: 尺寸资源用于定义边距、填充或文本大小，推荐使用 dp 和 sp 单位。
    example: |
      ```xml
      <resources>
          <dimen name="padding_large">16dp</dimen>
      </resources>
      ```

      ```kotlin
      // 在代码中获取尺寸资源
      val padding = resources.getDimension(R.dimen.padding_large)
      ```

  - title: 定义样式和主题
    content: 样式和主题用于为 UI 元素定义一致的外观。
    example: |
      ```xml
      <resources>
          <style name="BaseTheme" parent="Theme.AppCompat.Light">
              <item name="colorPrimary">@color/primaryColor</item>
              <item name="android:textSize">18sp</item>
          </style>
      </resources>
      ```

      ```xml
      <!-- 在 AndroidManifest 中应用主题 -->
      <application
          android:theme="@style/BaseTheme">
      </application>
      ```

  - title: 定义整数和布尔值
    content: 整数和布尔值资源分别用于存储数字和布尔类型的简单值。
    example: |
      ```xml
      <resources>
          <integer name="max_count">10</integer>
          <bool name="is_feature_enabled">true</bool>
      </resources>
      ```

      ```kotlin
      // 获取整数和布尔值资源
      val maxCount = resources.getInteger(R.integer.max_count)
      val isEnabled = resources.getBoolean(R.bool.is_feature_enabled)
      ```

  - title: 定义数组
    content: 数组资源可定义字符串或整数数组，便于批量使用和管理。
    example: |
      ```xml
      <resources>
          <string-array name="fruits">
              <item>Apple</item>
              <item>Banana</item>
              <item>Cherry</item>
          </string-array>
      </resources>
      ```

      ```kotlin
      // 获取字符串数组资源
      val fruits = resources.getStringArray(R.array.fruits)
      ```

references:
  - title: "Resource types overview | Android Developers"
    url: https://developer.android.com/guide/topics/resources/providing-resources
  - title: "More resource types | Android Developers"
    url: https://developer.android.com/guide/topics/resources/more-resources
  - title: "Externalizing Resources in Android"
    url: https://codingtube.tech
  - title: "Resource types in Android app"
    url: https://en.proft.me/032021
