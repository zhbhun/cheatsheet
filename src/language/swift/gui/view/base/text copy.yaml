id: text
title: UILabel
query: Swift UILabel
comment: 详细介绍 Swift UILabel 的用法及所有相关属性
description: "UILabel 是 UIKit 中用于显示不可编辑文本的组件，广泛用于 iOS 应用的用户界面中。UILabel 支持丰富的文本样式、对齐方式和多行显示，并且可以通过 Auto Layout 或代码进行布局。你可以使用属性来调整字体、颜色、阴影等视觉效果，并且支持富文本显示。UILabel 还可以配置手势响应，例如点击手势。"
usage:
  - title: "创建 UILabel"
    content: "UILabel 可以通过代码或 Interface Builder 创建。在代码中使用 UILabel() 构造函数创建实例，然后设置文本和其他属性。"
    example: |
      ```swift
      let label = UILabel()
      label.text = "Hello, World!"
      label.textColor = .black // 设置文本颜色为黑色
      label.font = UIFont.systemFont(ofSize: 16) // 设置字体大小
      label.textAlignment = .center // 文本居中对齐
      label.numberOfLines = 1 // 只显示一行文本
      ```

  - title: "设置文本和样式"
    content: "UILabel 支持多种文本样式和配置。可以设置文本字体、颜色、阴影以及行数等。"
    example: |
      ```swift
      label.text = "Welcome to Swift!"
      label.textColor = UIColor.red // 设置文本颜色为红色
      label.font = UIFont.boldSystemFont(ofSize: 18) // 设置加粗字体
      label.shadowColor = UIColor.gray // 添加文本阴影
      label.shadowOffset = CGSize(width: 1, height: 1) // 设置阴影偏移
      label.numberOfLines = 0 // 允许多行文本显示
      ```

  - title: "调整文本对齐方式"
    content: "UILabel 提供多种对齐方式，可以通过 `textAlignment` 属性调整文本的水平对齐，还可以使用 `lineBreakMode` 控制文本的换行方式。"
    example: |
      ```swift
      label.textAlignment = .center // 水平居中对齐
      label.lineBreakMode = .byTruncatingTail // 当文本过长时，尾部省略
      ```

  - title: "UILabel 添加点击手势"
    content: "UILabel 默认不响应点击，但可以通过启用 `isUserInteractionEnabled` 并添加 `UITapGestureRecognizer` 来处理点击事件。"
    example: |
      ```swift
      let label = UILabel()
      label.text = "Tap me"
      label.isUserInteractionEnabled = true // 启用用户交互

      let tapGesture = UITapGestureRecognizer(target: self, action: #selector(labelTapped))
      label.addGestureRecognizer(tapGesture)

      @objc func labelTapped() {
          print("Label was tapped")
      }
      ```

  - title: "富文本支持"
    content: "UILabel 支持通过 `NSAttributedString` 显示富文本，允许设置不同的字体样式、颜色和其他文本属性。"
    example: |
      ```swift
      let attributedString = NSMutableAttributedString(string: "Swift is awesome!")
      attributedString.addAttribute(.foregroundColor, value: UIColor.blue, range: NSRange(location: 0, length: 5))
      attributedString.addAttribute(.font, value: UIFont.boldSystemFont(ofSize: 20), range: NSRange(location: 6, length: 7))

      label.attributedText = attributedString // 设置富文本
      ```

  - title: "UILabel 动态调整尺寸"
    content: "通过 `sizeToFit()` 方法可以根据文本内容动态调整 UILabel 的尺寸。"
    example: |
      ```swift
      label.sizeToFit() // 根据文本内容调整 UILabel 的宽高
      ```

references:
  - title: "UILabel | Apple Developer Documentation"
    url: https://developer.apple.com/documentation/uikit/uilabel
  - title: "UILabel tap gesture in Swift"
    url: https://christiangiacomi.com/posts/swift-tap-label/
  - title: "How to create UILabel programmatically in Swift 5"
    url: https://www.youtube.com/watch?v=9MDvqOjeFzM
