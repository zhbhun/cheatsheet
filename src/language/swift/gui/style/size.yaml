id: size
title: Bounds and Frame
query: Swift UIKit Configuring the bounds and frame rectangles
comment: 尽量详尽的介绍 UIKit 如何配置视图的位置和大小配置
description: 在 UIKit 中，每一个视图都拥有两个重要的属性：`bounds` 和 `frame`，用于描述视图的大小和位置。`frame` 描述了视图在其父视图坐标系中的位置和大小，而 `bounds` 则是描述视图自身坐标系中的位置和大小。简单来说，`frame` 决定了视图在屏幕上的位置和大小，而 `bounds` 决定了视图的内容在其自身范围内的位置和大小。
usage:
  - title: frame 属性
    description: |
      `frame` 属性是一个 `CGRect` 类型的结构体，包含了视图的 origin 和 size 信息。

      - `origin`:  表示视图左上角在其父视图坐标系中的位置，是一个 `CGPoint` 类型的结构体，包含 `x` 和 `y` 两个属性。
      - `size`: 表示视图的宽度和高度，是一个 `CGSize` 类型的结构体，包含 `width` 和 `height` 两个属性。

      可以通过直接设置 `frame` 属性来改变视图的位置和大小。**需要注意的是，当对视图进行旋转、缩放等变换操作时，`frame` 属性的值会变得不确定，应该避免直接修改。**
    example: |
      ```swift
      // 创建一个新的 UIView
      let myView = UIView(frame: CGRect(x: 50, y: 100, width: 200, height: 150))

      // 修改视图的位置
      myView.frame.origin = CGPoint(x: 100, y: 150)

      // 修改视图的大小
      myView.frame.size = CGSize(width: 150, height: 100)
      ```
  - title: bounds 属性
    description: |
      `bounds` 属性也是一个 `CGRect` 类型的结构体，但它描述的是视图自身坐标系中的位置和大小。通常情况下，`bounds` 的 `origin` 为 (0, 0)，`size` 与 `frame` 的 `size` 相同。

      可以通过修改 `bounds` 属性来改变视图内容在其自身范围内的位置。**需要注意的是，修改 `bounds` 不会影响视图在父视图中的位置和大小。**
    example: |
      ```swift
      // 创建一个新的 UIView
      let myView = UIView(frame: CGRect(x: 50, y: 100, width: 200, height: 150))

      // 将视图内容向右下方偏移 20 个点
      myView.bounds.origin = CGPoint(x: 20, y: 20)
      ```
  - title: center 属性
    description: |
      `center` 属性是一个 `CGPoint` 类型的结构体，表示视图中心点在其父视图坐标系中的位置。可以通过修改 `center` 属性来改变视图的位置，而不会影响视图的大小。
    example: |
      ```swift
      // 创建一个新的 UIView
      let myView = UIView(frame: CGRect(x: 50, y: 100, width: 200, height: 150))

      // 将视图移动到屏幕中心
      myView.center = CGPoint(x: UIScreen.main.bounds.midX, y: UIScreen.main.bounds.midY)
      ```
  - title: contentMode 属性
    description: |
      `contentMode` 属性决定了当视图的 `bounds` 改变时，其内容的显示方式。例如，可以设置内容填充、等比例缩放、居中显示等等。
    example: |
      ```swift
      // 创建一个新的 UIImageView
      let imageView = UIImageView(frame: CGRect(x: 50, y: 100, width: 200, height: 150))
      imageView.image = UIImage(named: "myImage")

      // 设置图片内容填充模式为等比例缩放
      imageView.contentMode = .scaleAspectFit
      ```
  - title: bounds 和 frame 的关系
    description: |
      `bounds` 和 `frame` 并不是完全独立的属性，它们之间存在着密切的联系。通常情况下，修改 `frame` 会导致 `bounds` 发生改变，而修改 `bounds` 则不会影响 `frame`。

      当视图进行旋转、缩放等变换操作时，`frame` 的值会根据变换矩阵进行计算，而 `bounds` 则保持不变。
    example: |
      ```swift
      // 创建一个新的 UIView
      let myView = UIView(frame: CGRect(x: 50, y: 100, width: 200, height: 150))

      // 旋转视图 45 度
      myView.transform = CGAffineTransform(rotationAngle: .pi / 4)

      // 打印旋转后的 frame 和 bounds
      print("Frame: \(myView.frame)")
      print("Bounds: \(myView.bounds)")
      ```
  - title: 实际运用
    description: |
      在实际开发中，需要根据具体的需求来选择使用 `bounds` 还是 `frame`。例如：

      - 当需要改变视图的位置时，通常使用 `frame` 或 `center`。
      - 当需要改变视图内容在其自身范围内的位置时，使用 `bounds`。
      - 当需要对视图进行旋转、缩放等变换操作时，应该避免直接修改 `frame`，而是使用 `transform` 属性。
    example: 略
references:
  - title: bounds | Apple Developer Documentation
    url: https://developer.apple.com/documentation/uikit/uiview/1622580-bounds
  - title: frame | Apple Developer Documentation
    url: https://developer.apple.com/documentation/uikit/uiview/1622621-frame
  - title: UIView's frame, bounds, center, origin, when to use what?
    url: https://stackoverflow.com/questions/1071112/uiviews-frame-bounds-center-origin-when-to-use-what
