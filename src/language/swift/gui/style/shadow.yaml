id: shadow
title: 阴影
query: Swift UIKit Shadow Style
comment: Swift UIKit 视图的阴影样式用法
description: iOS 可以为任何 `UIView` 动态生成阴影，并且这些阴影会自动调整以适应视图内容的形状 - 甚至可以跟随 `UILabel` 内文本的曲线。此功能是内置的，因此您需要做的只是配置其属性，您需要关注以下四个属性：
usage:
  - title: 设置阴影颜色
    description: 使用 `shadowColor` 属性设置阴影的颜色，需要是 `CGColor` 类型。
    example: |
      ```swift
      yourView.layer.shadowColor = UIColor.black.cgColor // 设置阴影颜色为黑色
      ```
  - title: 设置阴影透明度
    description: 使用 `shadowOpacity` 属性设置阴影的透明度，0 表示不可见，1 表示最强。
    example: |
      ```swift
      yourView.layer.shadowOpacity = 0.5 // 设置阴影透明度为 50%
      ```
  - title: 设置阴影偏移量
    description: 使用 `shadowOffset` 属性设置阴影与视图的距离，以产生 3D 偏移效果。
    example: |
      ```swift
      yourView.layer.shadowOffset = CGSize(width: 5, height: 5) // 设置阴影向右下方偏移 5 个点
      ```
  - title: 设置阴影半径
    description: 使用 `shadowRadius` 属性设置阴影的宽度。
    example: |
      ```swift
      yourView.layer.shadowRadius = 10 // 设置阴影半径为 10 个点
      ```
  - title: 设置阴影路径
    description: 动态生成阴影的性能开销很大，因为 iOS 必须围绕视图内容的确切形状绘制阴影。如果可以，请将 `shadowPath` 属性设置为特定值，以便 iOS 不需要动态计算透明度。例如，这将创建一个与视图框架等效的阴影路径：
    example: |
      ```swift
      yourView.layer.shadowPath = UIBezierPath(rect: yourView.bounds).cgPath // 使用视图边界创建一个矩形阴影路径
      ```
  - title: 缓存渲染阴影
    description: 或者，请求 iOS 缓存渲染的阴影，这样就不需要重新绘制：
    example: |
      ```swift
      yourView.layer.shouldRasterize = true // 启用阴影栅格化
      ```
  - title: 设置阴影栅格化比例
    description: 如果您想采用栅格化方式，则应确保 iOS 以与主屏幕相同的绘图比例缓存阴影，否则阴影将看起来像素化：
    example: |
      ```swift
      yourView.layer.rasterizationScale = UIScreen.main.scale // 设置阴影栅格化比例与主屏幕一致
      ```
references:
  - title: Advanced UIView shadow effects using shadowPath
    url: https://www.hackingwithswift.com/articles/155/advanced-uiview-shadow-effects-using-shadowpath
  - title: How to add a shadow to a UIView
    url: https://www.hackingwithswift.com/example-code/uikit/how-to-add-a-shadow-to-a-uiview
